<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.youxu.business.dao.StoreMapper">
  <resultMap id="BaseResultMap" type="com.youxu.business.pojo.Store">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="store_name"  property="storeName" />
    <result column="store_address" jdbcType="VARCHAR" property="storeAddress" />
    <result column="store_phone" jdbcType="VARCHAR" property="storePhone" />
    <result column="store_time" jdbcType="VARCHAR" property="storeTime" />
    <result column="store_open_for_out" jdbcType="TINYINT" property="storeOpenForOut" />
    <result column="output_size" jdbcType="VARCHAR" property="outputSize" />
    <result column="store_output_colour" jdbcType="VARCHAR" property="storeOutputColour" />
    <result column="store_quality" jdbcType="VARCHAR" property="storeQuality" />
    <result column="store_latitude" jdbcType="DOUBLE" property="storeLatitude" />
    <result column="store_longitude" jdbcType="DOUBLE" property="storeLongitude" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="delivery_clerk_per_one"  property="deliveryclerkPricePerOne" />
    <result column="licence_price"  property="licencePrice" />
    <result column="store_binding_price_horizontal"  property="storeBindingPriceHorizontal" />
    <result column="store_binding_price_vertical"  property="storeBindingPriceVertical" />
    <result column="licence_price_change"  property="licencePriceChange" />
    <result column="licence_price_save"  property="licencePriceSave" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, store_name, store_address, store_phone, store_time, store_open_for_out, output_size, store_output_colour,
    store_quality, store_latitude, store_longitude, create_time, modify_time, status, delivery_clerk_per_one, licence_price
    ,store_binding_price_horizontal ,store_binding_price_vertical, licence_price_change, licence_price_save
</sql>
  <select id="selectByExample" parameterType="com.youxu.business.pojo.StoreExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_store
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.youxu.business.pojo.StoreExample">
    delete from tb_store
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.youxu.business.pojo.Store">
    insert into tb_store (id, store_address, store_phone, 
      store_time, store_open_for_out, output_size, 
      store_output_colour, store_quality, store_latitude, 
      store_longitude, create_time, modify_time, 
      status)
    values (#{id,jdbcType=INTEGER}, #{storeAddress,jdbcType=VARCHAR}, #{storePhone,jdbcType=VARCHAR}, 
      #{storeTime,jdbcType=VARCHAR}, #{storeOpenForOut,jdbcType=TINYINT}, #{outputSize,jdbcType=VARCHAR}, 
      #{storeOutputColour,jdbcType=VARCHAR}, #{storeQuality,jdbcType=VARCHAR}, #{storeLatitude,jdbcType=DOUBLE}, 
      #{storeLongitude,jdbcType=DOUBLE}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.youxu.business.pojo.Store">
    insert into tb_store
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="storeAddress != null">
        store_address,
      </if>
      <if test="storePhone != null">
        store_phone,
      </if>
      <if test="storeTime != null">
        store_time,
      </if>
      <if test="storeOpenForOut != null">
        store_open_for_out,
      </if>
      <if test="outputSize != null">
        output_size,
      </if>
      <if test="storeOutputColour != null">
        store_output_colour,
      </if>
      <if test="storeQuality != null">
        store_quality,
      </if>
      <if test="storeLatitude != null">
        store_latitude,
      </if>
      <if test="storeLongitude != null">
        store_longitude,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="storeAddress != null">
        #{storeAddress,jdbcType=VARCHAR},
      </if>
      <if test="storePhone != null">
        #{storePhone,jdbcType=VARCHAR},
      </if>
      <if test="storeTime != null">
        #{storeTime,jdbcType=VARCHAR},
      </if>
      <if test="storeOpenForOut != null">
        #{storeOpenForOut,jdbcType=TINYINT},
      </if>
      <if test="outputSize != null">
        #{outputSize,jdbcType=VARCHAR},
      </if>
      <if test="storeOutputColour != null">
        #{storeOutputColour,jdbcType=VARCHAR},
      </if>
      <if test="storeQuality != null">
        #{storeQuality,jdbcType=VARCHAR},
      </if>
      <if test="storeLatitude != null">
        #{storeLatitude,jdbcType=DOUBLE},
      </if>
      <if test="storeLongitude != null">
        #{storeLongitude,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.youxu.business.pojo.StoreExample" resultType="java.lang.Long">
    select count(*) from tb_store
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_store
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.storeAddress != null">
        store_address = #{record.storeAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.storePhone != null">
        store_phone = #{record.storePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.storeTime != null">
        store_time = #{record.storeTime,jdbcType=VARCHAR},
      </if>
      <if test="record.storeOpenForOut != null">
        store_open_for_out = #{record.storeOpenForOut,jdbcType=TINYINT},
      </if>
      <if test="record.outputSize != null">
        output_size = #{record.outputSize,jdbcType=VARCHAR},
      </if>
      <if test="record.storeOutputColour != null">
        store_output_colour = #{record.storeOutputColour,jdbcType=VARCHAR},
      </if>
      <if test="record.storeQuality != null">
        store_quality = #{record.storeQuality,jdbcType=VARCHAR},
      </if>
      <if test="record.storeLatitude != null">
        store_latitude = #{record.storeLatitude,jdbcType=DOUBLE},
      </if>
      <if test="record.storeLongitude != null">
        store_longitude = #{record.storeLongitude,jdbcType=DOUBLE},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_store
    set id = #{record.id,jdbcType=INTEGER},
      store_address = #{record.storeAddress,jdbcType=VARCHAR},
      store_phone = #{record.storePhone,jdbcType=VARCHAR},
      store_time = #{record.storeTime,jdbcType=VARCHAR},
      store_open_for_out = #{record.storeOpenForOut,jdbcType=TINYINT},
      output_size = #{record.outputSize,jdbcType=VARCHAR},
      store_output_colour = #{record.storeOutputColour,jdbcType=VARCHAR},
      store_quality = #{record.storeQuality,jdbcType=VARCHAR},
      store_latitude = #{record.storeLatitude,jdbcType=DOUBLE},
      store_longitude = #{record.storeLongitude,jdbcType=DOUBLE},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <!--查看所有店铺表-->
  <select id="selectStoreList" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    FROM tb_store
    where tb_store.status = false
  </select>
  <!--查看店铺通过店铺id-->
    <select id="selectByStoreId" resultMap="BaseResultMap">
      select <include refid="Base_Column_List"/>
      from tb_store
      where tb_store.id = #{storeId} and tb_store.status = false
    </select>


</mapper>