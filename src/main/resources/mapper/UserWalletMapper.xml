<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.youxu.business.dao.UserWalletMapper">
    <resultMap id="BaseResultMap" type="com.youxu.business.pojo.UserWallet">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="user_integral" jdbcType="INTEGER" property="userIntegral"/>
        <result column="wallet_balance" jdbcType="DOUBLE" property="walletBalance"/>
        <result column="wallet_cashback" jdbcType="DOUBLE" property="walletCashback"/>
        <result column="wallet_create_time" jdbcType="TIMESTAMP" property="walletCreateTime"/>
        <result column="wallet_modify_time" jdbcType="TIMESTAMP" property="walletModifyTime"/>
        <result column="wallet_status" jdbcType="BIT" property="walletStatus"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, user_id, user_integral, wallet_balance, wallet_cashback, wallet_create_time, 
    wallet_modify_time, wallet_status
  </sql>
    <select id="selectByExample" parameterType="com.youxu.business.pojo.UserWalletExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from tb_user_wallet
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_user_wallet
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_user_wallet
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.youxu.business.pojo.UserWalletExample">
        delete from tb_user_wallet
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.youxu.business.pojo.UserWallet">
    insert into tb_user_wallet (id, user_id, user_integral, 
      wallet_balance, wallet_cashback, wallet_create_time, 
      wallet_modify_time, wallet_status)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{userIntegral,jdbcType=INTEGER}, 
      #{walletBalance,jdbcType=DOUBLE}, #{walletCashback,jdbcType=DOUBLE}, #{walletCreateTime,jdbcType=TIMESTAMP}, 
      #{walletModifyTime,jdbcType=TIMESTAMP}, #{walletStatus,jdbcType=BIT})
  </insert>
    <insert id="insertSelective" parameterType="com.youxu.business.pojo.UserWallet">
        insert into tb_user_wallet
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="userIntegral != null">
                user_integral,
            </if>
            <if test="walletBalance != null">
                wallet_balance,
            </if>
            <if test="walletCashback != null">
                wallet_cashback,
            </if>
            <if test="walletCreateTime != null">
                wallet_create_time,
            </if>
            <if test="walletModifyTime != null">
                wallet_modify_time,
            </if>
            <if test="walletStatus != null">
                wallet_status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="userIntegral != null">
                #{userIntegral,jdbcType=INTEGER},
            </if>
            <if test="walletBalance != null">
                #{walletBalance,jdbcType=DOUBLE},
            </if>
            <if test="walletCashback != null">
                #{walletCashback,jdbcType=DOUBLE},
            </if>
            <if test="walletCreateTime != null">
                #{walletCreateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="walletModifyTime != null">
                #{walletModifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="walletStatus != null">
                #{walletStatus,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.youxu.business.pojo.UserWalletExample" resultType="java.lang.Long">
        select count(*) from tb_user_wallet
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update tb_user_wallet
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.userIntegral != null">
                user_integral = #{record.userIntegral,jdbcType=INTEGER},
            </if>
            <if test="record.walletBalance != null">
                wallet_balance = #{record.walletBalance,jdbcType=DOUBLE},
            </if>
            <if test="record.walletCashback != null">
                wallet_cashback = #{record.walletCashback,jdbcType=DOUBLE},
            </if>
            <if test="record.walletCreateTime != null">
                wallet_create_time = #{record.walletCreateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.walletModifyTime != null">
                wallet_modify_time = #{record.walletModifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.walletStatus != null">
                wallet_status = #{record.walletStatus,jdbcType=BIT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update tb_user_wallet
        set id = #{record.id,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=INTEGER},
        user_integral = #{record.userIntegral,jdbcType=INTEGER},
        wallet_balance = #{record.walletBalance,jdbcType=DOUBLE},
        wallet_cashback = #{record.walletCashback,jdbcType=DOUBLE},
        wallet_create_time = #{record.walletCreateTime,jdbcType=TIMESTAMP},
        wallet_modify_time = #{record.walletModifyTime,jdbcType=TIMESTAMP},
        wallet_status = #{record.walletStatus,jdbcType=BIT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.youxu.business.pojo.UserWallet">
        update tb_user_wallet
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="userIntegral != null">
                user_integral = #{userIntegral,jdbcType=INTEGER},
            </if>
            <if test="walletBalance != null">
                wallet_balance = #{walletBalance,jdbcType=DOUBLE},
            </if>
            <if test="walletCashback != null">
                wallet_cashback = #{walletCashback,jdbcType=DOUBLE},
            </if>
            <if test="walletCreateTime != null">
                wallet_create_time = #{walletCreateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="walletModifyTime != null">
                wallet_modify_time = #{walletModifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="walletStatus != null">
                wallet_status = #{walletStatus,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.youxu.business.pojo.UserWallet">
    update tb_user_wallet
    set user_id = #{userId,jdbcType=INTEGER},
      user_integral = #{userIntegral,jdbcType=INTEGER},
      wallet_balance = #{walletBalance,jdbcType=DOUBLE},
      wallet_cashback = #{walletCashback,jdbcType=DOUBLE},
      wallet_create_time = #{walletCreateTime,jdbcType=TIMESTAMP},
      wallet_modify_time = #{walletModifyTime,jdbcType=TIMESTAMP},
      wallet_status = #{walletStatus,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <!--根据用户id查看积分-->
    <select id="selectUserWalletByUserId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_user_wallet
        where tb_user_wallet.user_id = #{userId}
        and tb_user_wallet.wallet_status = false
    </select>
    <!--更新用户积分-->
    <update id="updateUserWallet">
        update tb_user_wallet
          set user_integral = #{userIntegral,jdbcType=INTEGER}
          ,wallet_modify_time = now()
          where user_id = #{userId}
  </update>

</mapper>